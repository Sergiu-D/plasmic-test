// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: juVZkpy6GyNsQ7cQcnMtYR
// Component: xebX2QI6jmIq
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Header from "../../Header"; // plasmic-import: o3OmhqmRx_2W/component
import Button from "../../Button"; // plasmic-import: CDGk2Wk5NWDU/component
import HomeFooterTop from "../../HomeFooterTop"; // plasmic-import: hl1a0oV_dA0U/component
import FooterMain from "../../FooterMain"; // plasmic-import: tesvkPR1z3Cj/component
import { useScreenVariants as useScreenVariantsraGy9YoyxeH2 } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: RaGy9YoyxeH2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "./plasmic.module.css"; // plasmic-import: juVZkpy6GyNsQ7cQcnMtYR/projectcss
import sty from "./PlasmicHome.module.css"; // plasmic-import: xebX2QI6jmIq/css
import Icon29Icon from "./icons/PlasmicIcon__Icon29"; // plasmic-import: rIX1VUtadyLs/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: kx96ipEbUY1g/icon
import Icon4Icon from "./icons/PlasmicIcon__Icon4"; // plasmic-import: EAKgMlwZYvtS/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: NNIruT911j4n/icon

createPlasmicElementProxy;

export const PlasmicHome__VariantProps = new Array();

export const PlasmicHome__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHome__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsraGy9YoyxeH2()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <Header
            data-plasmic-name={"header"}
            data-plasmic-override={overrides.header}
            className={classNames("__wab_instance", sty.header)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__mLmwL)}>
            <div className={classNames(projectcss.all, sty.freeBox__iVlIz)}>
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xvJel)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "We are the Business and Consulting Expert"
                      : "We help solve problems."}
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yp23Y
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy"
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pc7Ul)}
                >
                  <Stack__
                    as={"button"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.button,
                      sty.button__eneVj
                    )}
                    onClick={async event => {
                      const $steps = {};
                      $steps["updateStateVariable"] = true
                        ? (() => {
                            const actionArgs = {};
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              undefined;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateStateVariable"] != null &&
                        typeof $steps["updateStateVariable"] === "object" &&
                        typeof $steps["updateStateVariable"].then === "function"
                      ) {
                        $steps["updateStateVariable"] = await $steps[
                          "updateStateVariable"
                        ];
                      }
                    }}
                  >
                    {false ? (
                      <Icon29Icon
                        className={classNames(projectcss.all, sty.svg__sQXu)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lEu6N
                      )}
                    >
                      {"Get IN Touch"}
                    </div>
                    {false ? (
                      <Icon29Icon
                        className={classNames(projectcss.all, sty.svg__nl8Vo)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                </Stack__>
              </Stack__>
            </div>
          </div>
          <Stack__
            as={"section"}
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            hasGap={true}
            className={classNames(projectcss.all, sty.section)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"foreground"}
              data-plasmic-override={overrides.foreground}
              hasGap={true}
              className={classNames(projectcss.all, sty.foreground)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__ahGdA)}
              >
                <div className={classNames(projectcss.all, sty.column__j6Gg6)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__mFqug)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__azitR
                      )}
                    >
                      {"Freedoms"}
                    </div>
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__id4Q
                      )}
                    >
                      {"Open by design"}
                    </h2>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__crrra
                      )}
                    >
                      {
                        "Vitae sed sem a justo mauris potenti a primis vivamus justo tempor viverra adipiscing convallis fusce odio condimentum mi parturient ultricies."
                      }
                    </div>
                    <Button
                      className={classNames(
                        "__wab_instance",
                        sty.button__eh7Is
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon4Icon
                          className={classNames(projectcss.all, sty.svg__fou2J)}
                          role={"img"}
                        />
                      }
                      size={"minimal"}
                      startIcon={
                        <CheckSvgIcon
                          className={classNames(projectcss.all, sty.svg__miNfu)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__uMk8D
                        )}
                      >
                        {"Learn more"}
                      </div>
                    </Button>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__q0SQd)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6FGan)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__elmk)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__d5B2X
                        )}
                      >
                        {"Built on capability"}
                      </div>
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg__xXiDg)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vgJpb)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hTrtb
                        )}
                      >
                        {"Highly energetic"}
                      </div>
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg__ifsuU)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vxqxd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kgCq
                        )}
                      >
                        {"100% transparency and accountability"}
                      </div>
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg__u2Qyr)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rD7Nr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j5MJm
                        )}
                      >
                        {"Refreshing clarity"}
                      </div>
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg__xipQd)}
                        role={"img"}
                      />
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__uuKLg)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__nc5Yu
                        )}
                      >
                        {"Modern results"}
                      </div>
                      <Icon5Icon
                        className={classNames(projectcss.all, sty.svg___2TO)}
                        role={"img"}
                      />
                    </Stack__>
                  </div>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__zxLtV)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__hWvx)}
            >
              <div className={classNames(projectcss.all, sty.column___3RR1I)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5Di2A)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "237px"
                      : "100%"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/agency_website/images/austinDistelWD1LRb9OeEoUnsplashJpg.jpg",
                    fullWidth: 640,
                    fullHeight: 480,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__xzcVi)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__zLQqd)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "292px"
                      : "100%"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/agency_website/images/brookeCagleUHvRvDr7PgUnsplashJpg.jpg",
                    fullWidth: 3997,
                    fullHeight: 2665,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.column__fATa9)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__clq4A)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__vTg6P
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "About us"
                      : "About us"}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h8K29
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages."
                    }
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__boLN)}
                  >
                    <Stack__
                      as={"button"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        sty.button___4YaCc
                      )}
                    >
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__ea53S)}
                          role={"img"}
                        />
                      ) : null}
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__u6Ur1
                        )}
                      >
                        {"Read More"}
                      </div>
                      {false ? (
                        <Icon29Icon
                          className={classNames(projectcss.all, sty.svg__ndiLs)}
                          role={"img"}
                        />
                      ) : null}
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__uxGKk)}>
            <div className={classNames(projectcss.all, sty.freeBox__coU7)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__xYp6)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__lLlEq)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iKt2J)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__sbjxO
                      )}
                    >
                      {"Strategize"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xaxnn)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rwviv
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <div className={classNames(projectcss.all, sty.column___5QrYr)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__mhNtv)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__eCp23
                      )}
                    >
                      {"Innovate"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__x5JIs)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oiBtc
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                      }
                    </div>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__b991O)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eStpw)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__mLf6B
                      )}
                    >
                      {"Grow"}
                    </h2>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ifOj)}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ftqgy
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                      }
                    </div>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__lNytZ)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eOrwr)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xHt1B)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2LMq7)}
                  displayHeight={"140px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"140px"}
                  src={{
                    src: "/plasmic/agency_website/images/imagesJpg.jpg",
                    fullWidth: 225,
                    fullHeight: 225,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cSoc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__edNsm
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___2Mvt0)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zx1GF)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sxip)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7U3Fw
                        )}
                      >
                        {"Lorem Ipsum"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g0Zw0
                      )}
                    >
                      {"Director of Sales"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hi6HE)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__e3SiK)}
                  displayHeight={"140px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"140px"}
                  src={{
                    src: "/plasmic/agency_website/images/unnamedJpg.jpg",
                    fullWidth: 370,
                    fullHeight: 411,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rzF8S)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__am2O
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jo8Sa)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__puYjy)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cmytz)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tDOpr
                        )}
                      >
                        {"Lorem Ipsum"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pxfjb
                      )}
                    >
                      {"Director of Marketing"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dc2Ji)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__w1L15)}
                  displayHeight={"140px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"none"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"140px"}
                  src={{
                    src: "/plasmic/agency_website/images/images1Jpg.jpg",
                    fullWidth: 225,
                    fullHeight: 225,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hRuAp)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mpNfs
                    )}
                  >
                    {
                      "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                    }
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__r3YS)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yrMco)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xdBr6)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qchqy
                        )}
                      >
                        {"Lorem Ipsum"}
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lbHa2
                      )}
                    >
                      {"Director of Operations"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__lkfOh)}>
            <div className={classNames(projectcss.all, sty.freeBox__hzs7)} />
          </div>
          <HomeFooterTop
            data-plasmic-name={"homeFooterTop"}
            data-plasmic-override={overrides.homeFooterTop}
            className={classNames("__wab_instance", sty.homeFooterTop)}
          />

          <FooterMain
            data-plasmic-name={"footerMain"}
            data-plasmic-override={overrides.footerMain}
            className={classNames("__wab_instance", sty.footerMain)}
          />
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "header",
    "foreground2",
    "h1",
    "section",
    "foreground",
    "homeFooterTop",
    "footerMain"
  ],

  header: ["header"],
  foreground2: ["foreground2", "h1"],
  h1: ["h1"],
  section: ["section", "foreground"],
  foreground: ["foreground"],
  homeFooterTop: ["homeFooterTop"],
  footerMain: ["footerMain"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHome__ArgProps,
          internalVariantPropNames: PlasmicHome__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    foreground2: makeNodeComponent("foreground2"),
    h1: makeNodeComponent("h1"),
    section: makeNodeComponent("section"),
    foreground: makeNodeComponent("foreground"),
    homeFooterTop: makeNodeComponent("homeFooterTop"),
    footerMain: makeNodeComponent("footerMain"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
